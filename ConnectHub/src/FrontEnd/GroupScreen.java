package FrontEnd;

import Backend.Content;
import Backend.Group;
import Backend.Session;
import Backend.User;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.Image;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/**
 *
 * @author vip comp
 */
public class GroupScreen extends javax.swing.JFrame {
    private static Session S;
    private static String name;
    /**
     * Creates new form GroupScreen
     */
    public GroupScreen(Session S,String name) {
        initComponents();
        this.S = S;
        this.name = name;
        for(Group g: S.getAllGroups()){
            if(name.equals(g.getGroupName())){
            groupName.setText(g.getGroupName());
            postsPanel.setLayout(new BoxLayout(postsPanel, BoxLayout.Y_AXIS));
            for(Content c : g.getPosts()){
                JPanel postPanel = new JPanel();
                    postPanel.setLayout(new java.awt.BorderLayout());
                    for(User user:S.getOthers()){
                        if(c.getUserID().equals(user.getUserID())){
                            JLabel authorName = new JLabel(user.getUsername());
                            postPanel.add(authorName, java.awt.BorderLayout.NORTH);
                        }
                        else{
                            JLabel authorName = new JLabel(S.getLoggedInUser().getUsername());
                            postPanel.add(authorName, java.awt.BorderLayout.NORTH);
                        }
                    }
                    
                    

                    if (c.getImage() != null) {
                        ImageIcon imageIcon = new ImageIcon(c.getImage());
                        JLabel imageLabel = new JLabel();
                        Image scaledImage = imageIcon.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
                        imageLabel.setIcon(new ImageIcon(scaledImage));
                        postPanel.add(imageLabel, java.awt.BorderLayout.CENTER);
                    }
                    
                    JLabel postText = new JLabel(c.getText());
                    postPanel.add(postText, java.awt.BorderLayout.SOUTH);
                    postsPanel.add(postPanel);
            }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        postsPanel = new javax.swing.JPanel();
        groupName = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        viewRequests = new javax.swing.JButton();
        editRoles = new javax.swing.JButton();
        deleteGroup = new javax.swing.JButton();
        removeMember = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Group");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        javax.swing.GroupLayout postsPanelLayout = new javax.swing.GroupLayout(postsPanel);
        postsPanel.setLayout(postsPanelLayout);
        postsPanelLayout.setHorizontalGroup(
            postsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 419, Short.MAX_VALUE)
        );
        postsPanelLayout.setVerticalGroup(
            postsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 341, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(postsPanel);

        groupName.setFont(new java.awt.Font("SF Pro Text", 0, 24)); // NOI18N
        groupName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        viewRequests.setText("View Requests");
        viewRequests.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewRequestsActionPerformed(evt);
            }
        });

        editRoles.setText("Edit Roles");
        editRoles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editRolesActionPerformed(evt);
            }
        });

        deleteGroup.setText("Delete Group");
        deleteGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteGroupActionPerformed(evt);
            }
        });

        removeMember.setText("Remove Member");
        removeMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeMemberActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backButton)
                            .addComponent(editRoles))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(groupName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(112, 112, 112))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteGroup)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(removeMember)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(viewRequests, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backButton)
                    .addComponent(groupName, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editRoles)
                    .addComponent(deleteGroup)
                    .addComponent(removeMember)
                    .addComponent(viewRequests))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        NewsFeed NF = new NewsFeed(S);
        NF.show();
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void editRolesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editRolesActionPerformed
        boolean done = false;
        for(Group g: S.getPrimaryAdminGroups()){
            if(name.equals(g.getGroupName())){
                done =true;
                JDialog roleDialog = new JDialog(this, "Editing Roles", true);
                roleDialog.setSize(400, 100);
                roleDialog.setLayout(new BorderLayout());
                JPanel buttonPanel = new JPanel();
                // Add Promote button
                    JButton promoteButton = new JButton("Promote");
                    promoteButton.addActionListener(e -> {
                        //Code For Promoting
                        String Key = JOptionPane.showInputDialog("Enter Username: ");
                        for(User user:S.getOthers()){
                            if(user.getUsername().equals(Key)){
                                g.addAdmin(user.getUserID());
                            }
                        }
                    }
                    );
                    buttonPanel.add(promoteButton);
                //Add Demote Button
                JButton demoteButton = new JButton("Demote");
                    demoteButton.addActionListener(e -> {
                        String Key = JOptionPane.showInputDialog("Enter Username: ");
                        for(User user:S.getOthers()){
                            if(user.getUsername().equals(Key)){
                                g.removeAdmin(user.getUserID());
                            }
                        }
                        //Code for Demoting
                    });
                    buttonPanel.add(demoteButton);
                    // Add the panel to the dialog
                    JScrollPane scrollPane = new JScrollPane(buttonPanel);
                    roleDialog.add(scrollPane, BorderLayout.CENTER);

                    // Show the dialog
                    roleDialog.setLocationRelativeTo(this); // Center it relative to the main window
                    roleDialog.setVisible(true);
            }
        }
        if(!done) JOptionPane.showMessageDialog(null, "You do Not Have the Authority!", "Blocked!", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_editRolesActionPerformed

    private void removeMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeMemberActionPerformed
        boolean done = false; 
        for(Group g:S.getPrimaryAdminGroups()){
            if(name.equals(g.getGroupName())){
                String key = JOptionPane.showInputDialog("Enter Username: ");
                for(User user:S.getOthers()){
                    if(key.equals(user.getUsername())){
                        g.removeMember(user.getUserID());
                        done = true;
                    }
                }
            }
        }
        for(Group g:S.getNormalAdminGroups()){
            if(name.equals(g.getGroupName())){
                String key = JOptionPane.showInputDialog("Enter Username: ");
                for(User user:S.getOthers()){
                    if(key.equals(user.getUsername())){
                        g.removeMember(user.getUserID());
                        done = true;
                    }
                }
            }
        }
        if(!done) JOptionPane.showMessageDialog(null, "You do Not Have the Authority!", "Blocked!", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_removeMemberActionPerformed

    private void viewRequestsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewRequestsActionPerformed
        /*boolean done = false; 
        for(Group g:S.getNormalAdminGroups()){
            if(name.equals(g.getGroupName())){
            JDialog requestsDialog = new JDialog(this, "Requests", true);
            requestsDialog.setSize(400, 300);
            requestsDialog.setLayout(new BorderLayout());
            JPanel friendRequestsPanel = new JPanel();
            friendRequestsPanel.setLayout(new BoxLayout(friendRequestsPanel, BoxLayout.Y_AXIS));

            JPanel requestPanel = new JPanel();
            requestPanel.setLayout(new FlowLayout(FlowLayout.LEFT));
            for (String i:g.getMembershipRequests()) {
                JLabel nameLabel = new JLabel(i);
                requestPanel.add(nameLabel);
                JButton acceptButton = new JButton("Accept");
                acceptButton.addActionListener(e -> {
                    JOptionPane.showMessageDialog(this, i + " accepted!");
                    S.addMemberToGroup(g, i);
                });
                requestPanel.add(acceptButton);
                // Add Decline button
                JButton declineButton = new JButton("Decline");
                declineButton.addActionListener(e -> {
                    JOptionPane.showMessageDialog(this, i + " declined!");
                    S.declineMembershipRequest(g, i);
                });
                requestPanel.add(declineButton);

                // Add the requestPanel to the main friendRequestsPanel
                friendRequestsPanel.add(requestPanel);
            }
            // Add the panel to the dialog
            JScrollPane scrollPane = new JScrollPane(friendRequestsPanel);
            requestsDialog.add(scrollPane, BorderLayout.CENTER);

            // Show the dialog
            requestsDialog.setLocationRelativeTo(this); // Center it relative to the main window
            requestsDialog.setVisible(true); 
            }
             done = true;
        }
        if(!done) JOptionPane.showMessageDialog(null, "You do Not Have the Authority!", "Blocked!", JOptionPane.ERROR_MESSAGE);*/
    }//GEN-LAST:event_viewRequestsActionPerformed

    private void deleteGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteGroupActionPerformed
        boolean done = false;
        for(Group g:S.getPrimaryAdminGroups()){
            if(name.equals(g.getGroupName())){
                S.deleteGroup(g);
                done = true;
            }
        }
        if(!done) JOptionPane.showMessageDialog(null, "Access Denied", "Not Allowed", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_deleteGroupActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GroupScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GroupScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GroupScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GroupScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GroupScreen(S,name).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton deleteGroup;
    private javax.swing.JButton editRoles;
    private javax.swing.JLabel groupName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel postsPanel;
    private javax.swing.JButton removeMember;
    private javax.swing.JButton viewRequests;
    // End of variables declaration//GEN-END:variables
}
